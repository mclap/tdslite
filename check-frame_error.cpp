#include <assert.h>
#include "tds_frames.h"
#include "debug.h"

int main()
{
    const unsigned char sample[] = {
        0x04,0x01,0x00,0x6a,0x00,0x4b,0x01,0x00,
        0xaa, // type
        0x52,0x00, // length
        0x18,0x48,0x00,0x00, // error number
        0x01, // error_state
        0x0e, // error_class
        0x1b, // type
        0x00,0x4c, // length
        0x00,0x6f,0x00,0x67, // error_number
        0x00, // error_state
        0x69, // error_class
        0x00,0x6e, // length(error_text)
        0x00,0x20,0x00,0x66,0x00,0x61,0x00,0x69,
        0x00,0x6c,0x00,0x65,0x00,0x64,0x00,0x20,0x00,0x66,0x00,0x6f,
        0x00,0x72,0x00,0x20,0x00,0x75,0x00,0x73,0x00,0x65,0x00,0x72,
        0x00,0x20,0x00,0x27,0x00,0x73,0x00,0x61,0x00,0x27,0x00,0x2e,
        0x00,0x07,0x53,0x00,0x51,0x00,0x4c,0x00,0x54,0x00,0x45,0x00,
        0x53,0x00,0x54,0x00,0x00,
        0x01,0x00,0x00,0x00, // line
        0xfd,0x02,0x00,
        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        };

    unsigned char encoded[sizeof(sample)];

    tds::buffer tmp;
    tmp.put(sample, sizeof(sample));
    tds::frame_header header;
    tds::frame_response body;

    tmp.fetch(header);
    assert(true == body.decode(tmp));
    assert(1 == body.errors.size());
    assert("SQLTEST" == body.errors[0].server_name);
    assert("" == body.errors[0].proc_name);
    assert(1 == body.errors[0].line);
    assert("Login failed for user 'sa'." == body.errors[0].error_text);


    return 0;
}
