#include <assert.h>
#include "tds_frames.h"
#include "debug.h"

int main()
{
	const unsigned char sample[] = {
		0x04,0x01,0x00,0x6a,0x00,0x4b,0x01,0x00,
		0xaa, // type
		0x52,0x00, // length
		0x18,0x48,0x00,0x00, // error number
		0x01, // error_state
		0x0e, // error_class
		0x1b,0x00,0x4c,0x00,0x6f,0x00,0x67,
		0x00,0x69,0x00,0x6e,0x00,0x20,0x00,0x66,0x00,0x61,0x00,0x69,
		0x00,0x6c,0x00,0x65,0x00,0x64,0x00,0x20,0x00,0x66,0x00,0x6f,
		0x00,0x72,0x00,0x20,0x00,0x75,0x00,0x73,0x00,0x65,0x00,0x72,
		0x00,0x20,0x00,0x27,0x00,0x73,0x00,0x61,0x00,0x27,0x00,0x2e,
		0x00,0x07,0x53,0x00,0x51,0x00,0x4c,0x00,0x54,0x00,0x45,0x00,
		0x53,0x00,0x54,0x00,0x00,0x01,0x00,0x00,0x00,0xfd,0x02,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		};

	unsigned char encoded[sizeof(sample)];

	tds::buffer tmp;
	tmp.put(sample, sizeof(sample));
	tds::frame_header header;
	tds::frame_error body;

	tmp.fetch(header);
	body.decode(tmp);

	tmp.clear();

	tmp.put(header);
	TP_DEBUG("len1=%d, len2=%d", (int)(sizeof(sample)),(int)(tmp.size()));
	body.encode(tmp);
	TP_DEBUG("len1=%d, len2=%d", (int)(sizeof(sample)),(int)(tmp.size()));
	tmp.copy_to(0, tmp.size(), encoded);

	TP_DEBUG_DUMP(sample, sizeof(sample), "source, len=%d", (int)(sizeof(sample)));
	TP_DEBUG_DUMP(encoded, tmp.size(), "encoded, len=%d", (int)(tmp.size()));
	assert(0 == memcmp(sample, encoded, tmp.size()));

	return 0;
}
