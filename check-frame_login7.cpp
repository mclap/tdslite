#include <assert.h>
#include "tds_frames.h"
#include "debug.h"

int main()
{
	const unsigned char sample[] = {
		0x10,0x01,0x00,0x90,0x00,0x00,0x01,0x00,0x88,0x00,0x00,0x00,
		0x02,0x00,0x09,0x72,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x07,
		0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x03,0x00,0x00,
		0xE0,0x01,0x00,0x00,0x09,0x04,0x00,0x00,0x5E,0x00,0x08,0x00,
		0x6E,0x00,0x02,0x00,0x72,0x00,0x00,0x00,0x72,0x00,0x07,0x00,
		0x80,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x80,0x00,0x04,0x00,
		0x88,0x00,0x00,0x00,0x88,0x00,0x00,0x00,0x00,0x50,0x8B,0xE2,
		0xB7,0x8F,0x88,0x00,0x00,0x00,0x88,0x00,0x00,0x00,0x88,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x73,0x00,0x6B,0x00,0x6F,0x00,
		0x73,0x00,0x74,0x00,0x6F,0x00,0x76,0x00,0x31,0x00,0x73,0x00,
		0x61,0x00,0x4F,0x00,0x53,0x00,0x51,0x00,0x4C,0x00,0x2D,0x00,
		0x33,0x00,0x32,0x00,0x4F,0x00,0x44,0x00,0x42,0x00,0x43,0x00,
		};

	unsigned char encoded[sizeof(sample)];

	tds::buffer tmp;
	tmp.put(sample, sizeof(sample));
	tds::frame_header header;
	tds::frame_login7 request;

	tmp.fetch(header);
	request.decode(tmp);

	tmp.clear();

	tmp.put(header);
	TP_DEBUG("len1=%d, len2=%d", (int)(sizeof(sample)),(int)(tmp.size()));
	request.encode(tmp);
	TP_DEBUG("len1=%d, len2=%d", (int)(sizeof(sample)),(int)(tmp.size()));
	tmp.copy_to(0, tmp.size(), encoded);

	TP_DEBUG_DUMP(sample, sizeof(sample), "source, len=%d", (int)(sizeof(sample)));
	TP_DEBUG_DUMP(encoded, tmp.size(), "encoded, len=%d", (int)(tmp.size()));
	assert(0 == memcmp(sample, encoded, tmp.size()));

	return 0;
}
